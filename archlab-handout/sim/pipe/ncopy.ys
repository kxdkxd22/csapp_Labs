#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-4,%rdx  	# len = len - 4
#	andq %rdx,%rdx		# len < 0?
	jl remain		# if so, goto remain:

Loop:	mrmovq (%rdi),%r10	# read val from src...
	mrmovq 8(%rdi),%r11
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10,%r10		# val <= 0?
	jle LNpos1		# if so, goto LNpos1:
	iaddq $1,%rax		# count++

LNpos1:	rmmovq %r11,8(%rsi)
	andq %r11,%r11
	jle LNpos2
	iaddq $1,%rax

LNpos2: mrmovq 16(%rdi),%r10
	mrmovq 24(%rdi),%r11
	rmmovq %r10,16(%rsi)
	andq %r10,%r10
	jle LNpos3
	iaddq $1,%rax

LNpos3: rmmovq %r11,24(%rsi)
	andq %r11,%r11
	jle nextLoop
	iaddq $1,%rax

nextLoop: iaddq $32,%rdi
	  iaddq $32,%rsi
	  iaddq $-4,%rdx
	  jge Loop

remain: iaddq $3,%rdx
	jl Done
	mrmovq (%rdi),%r10
	mrmovq 8(%rdi),%r11
	rmmovq %r10,(%rsi)
	andq %r10,%r10
	jle rNpos
	iaddq $1,%rax

rNpos:  iaddq $-1,%rdx
        jl Done
	rmmovq %r11,8(%rsi)	
	andq %r11,%r11
	jle rNpos1
	iaddq $1,%rax

rNpos1: iaddq $-1,%rdx
	jl Done
	mrmovq 16(%rdi),%r10
	rmmovq %r10,16(%rsi)
	andq %r10,%r10
	jle Done
	iaddq $1,%rax

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */

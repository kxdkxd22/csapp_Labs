
# Execution begins at address 0
        .pos 0
        irmovq stack,%rsp
        call main
        halt
# Sample linked list
        .align 8
        ele1:
                .quad 0x00a
                .quad ele2
        ele2:  
                .quad 0x0b0
                .quad ele3 
        ele3: 
                .quad 0xc00
                .quad 0
        main:
                irmovq ele1,%rdi
		xorq %rax,%rax
                call rsum
                ret
# long sum
# start in %rdi, count in %rsi 
       
	rsum:   
                andq %rdi,%rdi
		jne loop
		irmovq $0x0,%rax
		ret
        loop:
                mrmovq (%rdi),%r10
		pushq %r10
                mrmovq 0x8(%rdi),%rdi
		call rsum
		popq %r10
		addq %r10,%rax
		ret
# Stack starts here and grows to lower addresses
                .pos 0x200
stack:

